<UserControl x:Class="ToDo.MVMM.Views.EditTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ToDo.MVMM.Views" xmlns:custom="clr-namespace:ToDo.CustomControls"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="700"
             xmlns:xcts="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit" xmlns:Converters="clr-namespace:ToDo.ValueConverters"
             Background="#181818">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <xctk:SolidColorBrushToColorConverter x:Key="SolidColorToColor"/>
        <Converters:DateConverter x:Key="DateConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="33"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Background="Black" Grid.ColumnSpan="2">
            <TextBlock Text="Task Settings" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="20"/>
        </DockPanel>
        <StackPanel Grid.Row="1">
            <custom:CustomTextBox Margin="20 30 20 0" Height="60" CornerRadius="5" TextBoxBackground="#343434" 
                                  PlaceHolderTextForeground="Gray" Foreground="LightGray" TextBoxText="{Binding Name, UpdateSourceTrigger=PropertyChanged}" TextBoxCaretColor="LightGray"
                                  PlaceHolderText="Task Name"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                

                <Border Background="{Binding ColorTag, UpdateSourceTrigger=PropertyChanged}" Width="30" Height="70" HorizontalAlignment="Left" Margin="20 20 0 0" CornerRadius="5" x:Name="Ff">
                    <Border.OpacityMask>
                        <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 0">
                            <GradientStop Offset="0.55" Color="Black"/>
                            <GradientStop Offset="0.55" Color="Transparent"/>
                        </LinearGradientBrush>
                    </Border.OpacityMask>
                </Border>

                <ToggleButton Height="70" Grid.Column="1" Margin="0 20 20 0" x:Name="ToggleColorCanvas">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border Background="Transparent" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding Height}">
                                            <TextBlock Text="Click to change color tag" Foreground="Gray" VerticalAlignment="Center" 
                                                       HorizontalAlignment="Center" FontSize="20" FontStyle="Italic"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="BorderBrush" Value="LightBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>

                    <Popup IsOpen="{Binding ElementName=ToggleColorCanvas, Path=IsChecked}" PlacementTarget="{Binding ElementName=ToggleColorCanvas}" StaysOpen="False">
                        <xcts:ColorCanvas Height="149" Width="230"  Background="Black" BorderThickness="0" Foreground="LightGray" x:Name="ColorPicker" 
                                          SelectedColor="{Binding ColorTag, Converter={StaticResource SolidColorToColor}}"/>
                    </Popup>
                </ToggleButton>
            </Grid>

            <Grid Margin="20 20 20 0 ">

                <Grid.Resources>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="#333333"
                                            CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                        <DockPanel>
                                            <ContentControl Content="{TemplateBinding Content}"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Margin="10 0 10 0"/>
                                            <Image Source="..\..\Media\CalendarIcon.png" HorizontalAlignment="Right" 
                                                   Width="30" Height="30"
                                                   Margin="0 0 10 0"/>
                                        </DockPanel>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="BorderBrush" Value="SkyBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <ToggleButton Height="50" x:Name="StartCalendarToggle" FontSize="15" Foreground="Gray">
                    <StackPanel>
                        <TextBlock Text="{Binding StartDate, Converter={StaticResource DateConverter}}" FontSize="15" Foreground="Gray"/>
                        <Popup IsOpen="{Binding ElementName=StartCalendarToggle, Path=IsChecked}" 
                                                    PlacementTarget="{Binding ElementName=StartCalendarToggle}" StaysOpen="False">
                            <Calendar x:Name="calendarStartDate" CalendarDayButtonStyle="{DynamicResource CalendarCalendarDayButtonStyle1}"
                                                          CalendarButtonStyle="{DynamicResource CalendarCalendarButtonStyle1}"
                                                          Style="{DynamicResource CalendarStyle1}"
                                                          DisplayDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged}"
                                                          SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged}"/>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
                <TextBlock Grid.Column="1" Text="To" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Gray"/>
                <ToggleButton Height="50" FontSize="15" Foreground="Gray" Grid.Column="2" x:Name="EndCalendarToggle">
                    <StackPanel>
                        <TextBlock Text="{Binding EndDate, Converter={StaticResource DateConverter}}" FontSize="15" Foreground="Gray"/>
                        <Popup IsOpen="{Binding ElementName=EndCalendarToggle, Path=IsChecked}" 
                                                    PlacementTarget="{Binding ElementName=EndCalendarToggle}" StaysOpen="False">
                            <Calendar x:Name="calendarEndDate" CalendarDayButtonStyle="{DynamicResource CalendarCalendarDayButtonStyle1}"
                                                          CalendarButtonStyle="{DynamicResource CalendarCalendarButtonStyle1}"
                                                          Style="{DynamicResource CalendarStyle1}"
                                                          DisplayDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged}"
                                                          SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged}"/>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
            </Grid>

            <custom:CustomButton Width="350" Height="50" Margin="0 50 0 0" Background="#343434" CornerRadius="5" Content="Submit" 
                                 Foreground="LightGray"
                                 FontSize="20"
                                 HoverColor="Gray"
                                 ActiveColor="DarkGray"
                                 Command="{Binding SubmitCommand}"/>
        </StackPanel>
    </Grid>
    
</UserControl>
